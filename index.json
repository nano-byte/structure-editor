{
  "api/NanoByte.StructureEditor.ContainerDescription-1.html": {
    "href": "api/NanoByte.StructureEditor.ContainerDescription-1.html",
    "title": "Class ContainerDescription<TContainer> | NanoByte Structure Editor",
    "summary": "Class ContainerDescription<TContainer> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes an object that contains nodes (properties and/or lists). Provides information about how to edit this content. public class ContainerDescription<TContainer> : IContainerDescription<TContainer> where TContainer : class Type Parameters TContainer The type of the container to be described. Inheritance object ContainerDescription<TContainer> Implements IContainerDescription<TContainer> Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods ContainerDescriptionExtensions.AddPlainList<TContainer, TElement, TEditor>(IContainerDescription<TContainer>, string, Func<TContainer, IList<TElement>>, TEditor) ContainerDescriptionExtensions.AddProperty<TContainer, TProperty, TEditor>(IContainerDescription<TContainer>, string, Func<TContainer, PropertyPointer<TProperty?>>, TEditor) Methods AddList<TList>(Func<TContainer, IList<TList>>) Adds a list to the description. public IListDescription<TContainer, TList> AddList<TList>(Func<TContainer, IList<TList>> getList) where TList : class Parameters getList Func<TContainer, IList<TList>> A function to retrieve the list from the container. Returns IListDescription<TContainer, TList> A list description, enabling you to specify explicit sub-types of TList allowed in the list. Type Parameters TList The type of elements in the list. AddPlainList<TElement, TEditor>(string, Func<TContainer, IList<TElement>>, Func<TElement>, TEditor) Adds a list with only one type of element to the description. public IContainerDescription<TContainer> AddPlainList<TElement, TEditor>(string name, Func<TContainer, IList<TElement>> getList, Func<TElement> factory, TEditor editor) where TElement : class, IEquatable<TElement> where TEditor : INodeEditor<TElement>, new() Parameters name string The name of the element type. getList Func<TContainer, IList<TElement>> A function to retrieve the list from the container. factory Func<TElement> Callback to create a new instance of the element. editor TEditor Dummy element used for type inference of the editor class. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TElement The type of elements in the list. TEditor An editor for modifying this type of element. AddProperty<TProperty, TEditor>(string, Func<TContainer, PropertyPointer<TProperty?>>, Func<TProperty>, TEditor) Adds a property to the description. public IContainerDescription<TContainer> AddProperty<TProperty, TEditor>(string name, Func<TContainer, PropertyPointer<TProperty?>> getPointer, Func<TProperty> factory, TEditor editor) where TProperty : class, IEquatable<TProperty> where TEditor : INodeEditor<TProperty>, new() Parameters name string The name of the property. getPointer Func<TContainer, PropertyPointer<TProperty>> A function to retrieve a pointer to property in the container. factory Func<TProperty> Callback to create a new instance of the property. editor TEditor Dummy element used for type inference of the editor class. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TProperty The type of the property. TEditor An editor for modifying the content of the property. GetCandidatesFor(TContainer) Returns information about possible new child nodes for a specific instance of the container. public IEnumerable<NodeCandidate?> GetCandidatesFor(TContainer container) Parameters container TContainer The container instance to look at. Returns IEnumerable<NodeCandidate> GetNodesIn(TContainer) Returns information about nodes found in a specific instance of the container. public IEnumerable<Node> GetNodesIn(TContainer container) Parameters container TContainer The container instance to look in to. Returns IEnumerable<Node>"
  },
  "api/NanoByte.StructureEditor.ContainerDescriptionExtensions.html": {
    "href": "api/NanoByte.StructureEditor.ContainerDescriptionExtensions.html",
    "title": "Class ContainerDescriptionExtensions | NanoByte Structure Editor",
    "summary": "Class ContainerDescriptionExtensions Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Provides extensions methods for IContainerDescription<TContainer>. public static class ContainerDescriptionExtensions Inheritance object ContainerDescriptionExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods AddPlainList<TContainer, TElement, TEditor>(IContainerDescription<TContainer>, string, Func<TContainer, IList<TElement>>, TEditor) Adds a list with only one type of element to the description. public static IContainerDescription<TContainer> AddPlainList<TContainer, TElement, TEditor>(this IContainerDescription<TContainer> description, string name, Func<TContainer, IList<TElement>> getList, TEditor editor) where TContainer : class where TElement : class, IEquatable<TElement>, new() where TEditor : INodeEditor<TElement>, new() Parameters description IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). name string The name of the element type. getList Func<TContainer, IList<TElement>> A function to retrieve the list from the container. editor TEditor Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the list. TElement The type of elements in the list. TEditor An editor for modifying the content of the property. AddProperty<TContainer, TProperty, TEditor>(IContainerDescription<TContainer>, string, Func<TContainer, PropertyPointer<TProperty?>>, TEditor) Adds a property to the description. public static IContainerDescription<TContainer> AddProperty<TContainer, TProperty, TEditor>(this IContainerDescription<TContainer> description, string name, Func<TContainer, PropertyPointer<TProperty?>> getPointer, TEditor editor) where TContainer : class where TProperty : class, IEquatable<TProperty>, new() where TEditor : INodeEditor<TProperty>, new() Parameters description IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). name string The name of the property. getPointer Func<TContainer, PropertyPointer<TProperty>> A function to retrieve a pointer to property in the container. editor TEditor Dummy element used for type inference of TEditor. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the property. TProperty The type of the property. TEditor An editor for modifying the content of the property."
  },
  "api/NanoByte.StructureEditor.IContainerDescription-1.html": {
    "href": "api/NanoByte.StructureEditor.IContainerDescription-1.html",
    "title": "Interface IContainerDescription<TContainer> | NanoByte Structure Editor",
    "summary": "Interface IContainerDescription<TContainer> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes an object that contains nodes (properties and/or lists). Provides information about how to edit this content. public interface IContainerDescription<TContainer> where TContainer : class Type Parameters TContainer The type of the container to be described. Extension Methods ContainerDescriptionExtensions.AddPlainList<TContainer, TElement, TEditor>(IContainerDescription<TContainer>, string, Func<TContainer, IList<TElement>>, TEditor) ContainerDescriptionExtensions.AddProperty<TContainer, TProperty, TEditor>(IContainerDescription<TContainer>, string, Func<TContainer, PropertyPointer<TProperty?>>, TEditor) Methods AddList<TList>(Func<TContainer, IList<TList>>) Adds a list to the description. IListDescription<TContainer, TList> AddList<TList>(Func<TContainer, IList<TList>> getList) where TList : class Parameters getList Func<TContainer, IList<TList>> A function to retrieve the list from the container. Returns IListDescription<TContainer, TList> A list description, enabling you to specify explicit sub-types of TList allowed in the list. Type Parameters TList The type of elements in the list. AddPlainList<TElement, TEditor>(string, Func<TContainer, IList<TElement>>, Func<TElement>, TEditor) Adds a list with only one type of element to the description. IContainerDescription<TContainer> AddPlainList<TElement, TEditor>(string name, Func<TContainer, IList<TElement>> getList, Func<TElement> factory, TEditor editor) where TElement : class, IEquatable<TElement> where TEditor : INodeEditor<TElement>, new() Parameters name string The name of the element type. getList Func<TContainer, IList<TElement>> A function to retrieve the list from the container. factory Func<TElement> Callback to create a new instance of the element. editor TEditor Dummy element used for type inference of the editor class. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TElement The type of elements in the list. TEditor An editor for modifying this type of element. AddProperty<TProperty, TEditor>(string, Func<TContainer, PropertyPointer<TProperty?>>, Func<TProperty>, TEditor) Adds a property to the description. IContainerDescription<TContainer> AddProperty<TProperty, TEditor>(string name, Func<TContainer, PropertyPointer<TProperty?>> getPointer, Func<TProperty> factory, TEditor editor) where TProperty : class, IEquatable<TProperty> where TEditor : INodeEditor<TProperty>, new() Parameters name string The name of the property. getPointer Func<TContainer, PropertyPointer<TProperty>> A function to retrieve a pointer to property in the container. factory Func<TProperty> Callback to create a new instance of the property. editor TEditor Dummy element used for type inference of the editor class. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TProperty The type of the property. TEditor An editor for modifying the content of the property. GetCandidatesFor(TContainer) Returns information about possible new child nodes for a specific instance of the container. IEnumerable<NodeCandidate?> GetCandidatesFor(TContainer container) Parameters container TContainer The container instance to look at. Returns IEnumerable<NodeCandidate> GetNodesIn(TContainer) Returns information about nodes found in a specific instance of the container. IEnumerable<Node> GetNodesIn(TContainer container) Parameters container TContainer The container instance to look in to. Returns IEnumerable<Node>"
  },
  "api/NanoByte.StructureEditor.IListDescription-2.html": {
    "href": "api/NanoByte.StructureEditor.IListDescription-2.html",
    "title": "Interface IListDescription<TContainer, TList> | NanoByte Structure Editor",
    "summary": "Interface IListDescription<TContainer, TList> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Exposes methods for configuring a list in a ContainerDescription<TContainer> in a Fluent API style. public interface IListDescription<TContainer, TList> where TContainer : class where TList : class Type Parameters TContainer The type of the container containing the list. TList The type of elements in the list. Methods AddElement<TElement, TEditor>(string, Func<TElement>, TEditor) Adds a list element type to the description. IListDescription<TContainer, TList> AddElement<TElement, TEditor>(string name, Func<TElement> factory, TEditor editor) where TElement : class, TList, IEquatable<TElement> where TEditor : INodeEditor<TElement>, new() Parameters name string The name of the element type. factory Func<TElement> Callback to create a new instance of TElement. editor TEditor Dummy element used for type inference of TEditor. Returns IListDescription<TContainer, TList> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TElement The type of a specific element type in the list. TEditor An editor for modifying this type of element."
  },
  "api/NanoByte.StructureEditor.INodeEditor-1.html": {
    "href": "api/NanoByte.StructureEditor.INodeEditor-1.html",
    "title": "Interface INodeEditor<T> | NanoByte Structure Editor",
    "summary": "Interface INodeEditor<T> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Provides an interface to a control that edits a node in the structure. public interface INodeEditor<T> : INodeEditor where T : class Type Parameters T The type of object to edit. Inherited Members INodeEditor.CommandExecutor Properties Target The element to be edited. [Browsable(false)] T? Target { get; set; } Property Value T"
  },
  "api/NanoByte.StructureEditor.INodeEditor.html": {
    "href": "api/NanoByte.StructureEditor.INodeEditor.html",
    "title": "Interface INodeEditor | NanoByte Structure Editor",
    "summary": "Interface INodeEditor Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Provides an interface to a control that edits a node in the structure. public interface INodeEditor Properties CommandExecutor An optional undo system to use for editing. ICommandExecutor? CommandExecutor { get; set; } Property Value ICommandExecutor"
  },
  "api/NanoByte.StructureEditor.IStructureEditor-1.html": {
    "href": "api/NanoByte.StructureEditor.IStructureEditor-1.html",
    "title": "Interface IStructureEditor<T> | NanoByte Structure Editor",
    "summary": "Interface IStructureEditor<T> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll An editor for hierarchical structures. public interface IStructureEditor<T> where T : class Type Parameters T The type of object to edit. Methods DescribeRoot(string) Set up handling for the root element with a generic editor. IContainerDescription<T> DescribeRoot(string name) Parameters name string The name of the root element. Returns IContainerDescription<T> DescribeRoot<TEditor>(string) Set up handling for the root element with a custom editor. IContainerDescription<T> DescribeRoot<TEditor>(string name) where TEditor : INodeEditor<T>, new() Parameters name string The name of the root element. Returns IContainerDescription<T> Type Parameters TEditor An editor for modifying the content of the root. Describe<TContainer>() Adds a ContainerDescription<TContainer> used to describe the structure of the data being editing. IContainerDescription<TContainer> Describe<TContainer>() where TContainer : class Returns IContainerDescription<TContainer> The ContainerDescription<TContainer> for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container to describe."
  },
  "api/NanoByte.StructureEditor.ITargetContainerInject-1.html": {
    "href": "api/NanoByte.StructureEditor.ITargetContainerInject-1.html",
    "title": "Interface ITargetContainerInject<T> | NanoByte Structure Editor",
    "summary": "Interface ITargetContainerInject<T> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Implement this interface in addition to INodeEditor<T> in order to get the target's container injected. public interface ITargetContainerInject<T> where T : class Type Parameters T The type of the container. Properties TargetContainer The Target's container. [Browsable(false)] T? TargetContainer { get; set; } Property Value T"
  },
  "api/NanoByte.StructureEditor.ListElementNode-4.html": {
    "href": "api/NanoByte.StructureEditor.ListElementNode-4.html",
    "title": "Class ListElementNode<TContainer, TList, TElement, TEditor> | NanoByte Structure Editor",
    "summary": "Class ListElementNode<TContainer, TList, TElement, TEditor> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes a node in the structure that points to an element in the list. public class ListElementNode<TContainer, TList, TElement, TEditor> : Node where TContainer : class where TList : notnull where TElement : class, TList where TEditor : INodeEditor<TElement>, new() Type Parameters TContainer The type of the container containing the list. TList The type of elements in the list. TElement The type of a specific element type in the list. TEditor An editor for modifying the content of the element. Inheritance object Node ListElementNode<TContainer, TList, TElement, TEditor> Inherited Members Node.NodeType Node.Description Node.Target Node.ToString() Node.GetDescription<T>() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ListElementNode(string, TContainer, IList<TList>, TElement) Describes a node in the structure that points to an element in the list. public ListElementNode(string name, TContainer container, IList<TList> list, TElement element) Parameters name string The name of the element type. container TContainer The container containing the list. list IList<TList> The list containing the element. element TElement The element in the list. Methods GetEditorControl(ICommandExecutor) Gets a GUI control for editing the node's target. public override INodeEditor GetEditorControl(ICommandExecutor executor) Parameters executor ICommandExecutor Used to perform undo/redo operations. Returns INodeEditor GetRemoveCommand() Gets a command for removing the node's target from the structure. public override IUndoCommand GetRemoveCommand() Returns IUndoCommand GetSerialized() Returns a serialized representation of the Target. public override string GetSerialized() Returns string GetUpdateCommand(string) Gets a command for updating the node's target with a new value. public override IValueCommand? GetUpdateCommand(string serializedValue) Parameters serializedValue string A serialized representation of the new value. Returns IValueCommand"
  },
  "api/NanoByte.StructureEditor.ListElementNodeCandidate-2.html": {
    "href": "api/NanoByte.StructureEditor.ListElementNodeCandidate-2.html",
    "title": "Class ListElementNodeCandidate<TList, TElement> | NanoByte Structure Editor",
    "summary": "Class ListElementNodeCandidate<TList, TElement> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes a potential new node in the structure that points to an element in the list. public class ListElementNodeCandidate<TList, TElement> : NodeCandidate where TList : notnull where TElement : TList Type Parameters TList The type of elements in the list. TElement The type of a specific element type to add to the list. Inheritance object NodeCandidate ListElementNodeCandidate<TList, TElement> Inherited Members NodeCandidate.NodeType NodeCandidate.Description NodeCandidate.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ListElementNodeCandidate(string, IList<TList>, Func<TElement>) Describes a potential new node in the structure that points to an element in the list. public ListElementNodeCandidate(string name, IList<TList> list, Func<TElement> factory) Parameters name string The name of the element type. list IList<TList> The list to add the element to. factory Func<TElement> Callback to create a new instance of TElement. Methods GetCreateCommand() Gets a command for creating the new node in the structure. public override IValueCommand GetCreateCommand() Returns IValueCommand"
  },
  "api/NanoByte.StructureEditor.Node.html": {
    "href": "api/NanoByte.StructureEditor.Node.html",
    "title": "Class Node | NanoByte Structure Editor",
    "summary": "Class Node Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes a specific node in the structure. public abstract class Node Inheritance object Node Derived ListElementNode<TContainer, TList, TElement, TEditor> PropertyNode<TContainer, TProperty, TEditor> Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Node(string, string?, object?) Describes a specific node in the structure. protected Node(string nodeType, string? description, object? target) Parameters nodeType string The name of the node type. description string A description of the node type. target object The object the node represents. Properties Description A description of the node type. public string? Description { get; } Property Value string NodeType The name of the node type. public string NodeType { get; } Property Value string Target The object the node represents. public object? Target { get; } Property Value object Methods GetDescription<T>() Gets the Description of T, if any. public static string? GetDescription<T>() Returns string Type Parameters T GetEditorControl(ICommandExecutor) Gets a GUI control for editing the node's target. public abstract INodeEditor GetEditorControl(ICommandExecutor executor) Parameters executor ICommandExecutor Used to perform undo/redo operations. Returns INodeEditor GetRemoveCommand() Gets a command for removing the node's target from the structure. public abstract IUndoCommand GetRemoveCommand() Returns IUndoCommand GetSerialized() Returns a serialized representation of the Target. public abstract string GetSerialized() Returns string GetUpdateCommand(string) Gets a command for updating the node's target with a new value. public abstract IValueCommand? GetUpdateCommand(string serializedValue) Parameters serializedValue string A serialized representation of the new value. Returns IValueCommand ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NanoByte.StructureEditor.NodeCandidate.html": {
    "href": "api/NanoByte.StructureEditor.NodeCandidate.html",
    "title": "Class NodeCandidate | NanoByte Structure Editor",
    "summary": "Class NodeCandidate Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes a potential new node in the structure. public abstract class NodeCandidate Inheritance object NodeCandidate Derived ListElementNodeCandidate<TList, TElement> PropertyNodeCandidate<TProperty> Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors NodeCandidate(string, string?) Describes a potential new node in the structure. protected NodeCandidate(string nodeType, string? description) Parameters nodeType string The name of the node type. description string A description of the node type. Properties Description A description of the node type. public string? Description { get; } Property Value string NodeType The name of the node type. public string NodeType { get; } Property Value string Methods GetCreateCommand() Gets a command for creating the new node in the structure. public abstract IValueCommand GetCreateCommand() Returns IValueCommand ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NanoByte.StructureEditor.PropertyNode-3.html": {
    "href": "api/NanoByte.StructureEditor.PropertyNode-3.html",
    "title": "Class PropertyNode<TContainer, TProperty, TEditor> | NanoByte Structure Editor",
    "summary": "Class PropertyNode<TContainer, TProperty, TEditor> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes a node in the structure that points to a property. public class PropertyNode<TContainer, TProperty, TEditor> : Node where TContainer : class where TProperty : class where TEditor : INodeEditor<TProperty>, new() Type Parameters TContainer The type of the container containing the property. TProperty The type of the property. TEditor An editor for modifying the content of the property. Inheritance object Node PropertyNode<TContainer, TProperty, TEditor> Inherited Members Node.NodeType Node.Description Node.Target Node.ToString() Node.GetDescription<T>() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PropertyNode(string, TContainer, PropertyPointer<TProperty?>) Describes a node in the structure that points to a property. public PropertyNode(string name, TContainer container, PropertyPointer<TProperty?> pointer) Parameters name string The name of the property. container TContainer The container containing the property. pointer PropertyPointer<TProperty> A pointer to the property. Methods GetEditorControl(ICommandExecutor) Gets a GUI control for editing the node's target. public override INodeEditor GetEditorControl(ICommandExecutor executor) Parameters executor ICommandExecutor Used to perform undo/redo operations. Returns INodeEditor GetRemoveCommand() Gets a command for removing the node's target from the structure. public override IUndoCommand GetRemoveCommand() Returns IUndoCommand GetSerialized() Returns a serialized representation of the Target. public override string GetSerialized() Returns string GetUpdateCommand(string) Gets a command for updating the node's target with a new value. public override IValueCommand? GetUpdateCommand(string serializedValue) Parameters serializedValue string A serialized representation of the new value. Returns IValueCommand"
  },
  "api/NanoByte.StructureEditor.PropertyNodeCandidate-1.html": {
    "href": "api/NanoByte.StructureEditor.PropertyNodeCandidate-1.html",
    "title": "Class PropertyNodeCandidate<TProperty> | NanoByte Structure Editor",
    "summary": "Class PropertyNodeCandidate<TProperty> Namespace NanoByte.StructureEditor Assembly NanoByte.StructureEditor.dll Describes a potential new node in the structure that points to a property. public class PropertyNodeCandidate<TProperty> : NodeCandidate where TProperty : class Type Parameters TProperty The type of the property. Inheritance object NodeCandidate PropertyNodeCandidate<TProperty> Inherited Members NodeCandidate.NodeType NodeCandidate.Description NodeCandidate.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PropertyNodeCandidate(string, PropertyPointer<TProperty?>, Func<TProperty>) Describes a potential new node in the structure that points to a property. public PropertyNodeCandidate(string name, PropertyPointer<TProperty?> pointer, Func<TProperty> factory) Parameters name string The name of the property. pointer PropertyPointer<TProperty> A pointer to the property. factory Func<TProperty> Callback to create a new instance of TProperty. Methods GetCreateCommand() Gets a command for creating the new node in the structure. public override IValueCommand GetCreateCommand() Returns IValueCommand"
  },
  "api/NanoByte.StructureEditor.WinForms.ContainerDescriptionExtensions.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.ContainerDescriptionExtensions.html",
    "title": "Class ContainerDescriptionExtensions | NanoByte Structure Editor",
    "summary": "Class ContainerDescriptionExtensions Namespace NanoByte.StructureEditor.WinForms Assembly NanoByte.StructureEditor.WinForms.dll Provides WinForms-specific extensions methods for IContainerDescription<TContainer>. public static class ContainerDescriptionExtensions Inheritance object ContainerDescriptionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddElement<TContainer, TList, TElement>(IListDescription<TContainer, TList>, string, Func<TElement>) Adds a list element type to the description using PropertyGridNodeEditor<T>. public static IListDescription<TContainer, TList> AddElement<TContainer, TList, TElement>(this IListDescription<TContainer, TList> description, string name, Func<TElement> factory) where TContainer : class where TList : class where TElement : class, TList, IEquatable<TElement> Parameters description IListDescription<TContainer, TList> Describes an object that contains nodes (properties and/or lists). name string The name of the element type. factory Func<TElement> Callback to create a new instance of TElement. Returns IListDescription<TContainer, TList> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the list. TList The type of elements in the list. TElement The type of a specific element type in the list. AddPlainList<TContainer, TElement>(IContainerDescription<TContainer>, string, Func<TContainer, IList<TElement>>) Adds a list with only one type of element to the description using PropertyGridNodeEditor<T>. public static IContainerDescription<TContainer> AddPlainList<TContainer, TElement>(this IContainerDescription<TContainer> description, string name, Func<TContainer, IList<TElement>> getList) where TContainer : class where TElement : class, IEquatable<TElement>, new() Parameters description IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). name string The name of the element type. getList Func<TContainer, IList<TElement>> A function to retrieve the list from the container. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the list. TElement The type of elements in the list. AddPlainList<TContainer, TElement>(IContainerDescription<TContainer>, string, Func<TContainer, IList<TElement>>, Func<TElement>) Adds a list with only one type of element to the description using PropertyGridNodeEditor<T>. public static IContainerDescription<TContainer> AddPlainList<TContainer, TElement>(this IContainerDescription<TContainer> description, string name, Func<TContainer, IList<TElement>> getList, Func<TElement> factory) where TContainer : class where TElement : class, IEquatable<TElement> Parameters description IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). name string The name of the element type. getList Func<TContainer, IList<TElement>> A function to retrieve the list from the container. factory Func<TElement> Callback to create a new instance of TElement. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the list. TElement The type of elements in the list. AddProperty<TContainer, TProperty>(IContainerDescription<TContainer>, string, Func<TContainer, PropertyPointer<TProperty?>>) Adds a property to the description using PropertyGridNodeEditor<T>. public static IContainerDescription<TContainer> AddProperty<TContainer, TProperty>(this IContainerDescription<TContainer> description, string name, Func<TContainer, PropertyPointer<TProperty?>> getPointer) where TContainer : class where TProperty : class, IEquatable<TProperty>, new() Parameters description IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). name string The name of the property. getPointer Func<TContainer, PropertyPointer<TProperty>> A function to retrieve a pointer to property in the container. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the property. TProperty The type of the property. AddProperty<TContainer, TProperty>(IContainerDescription<TContainer>, string, Func<TContainer, PropertyPointer<TProperty?>>, Func<TProperty>) Adds a property to the description using PropertyGridNodeEditor<T>. public static IContainerDescription<TContainer> AddProperty<TContainer, TProperty>(this IContainerDescription<TContainer> description, string name, Func<TContainer, PropertyPointer<TProperty?>> getPointer, Func<TProperty> factory) where TContainer : class where TProperty : class, IEquatable<TProperty> Parameters description IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). name string The name of the property. getPointer Func<TContainer, PropertyPointer<TProperty>> A function to retrieve a pointer to property in the container. factory Func<TProperty> Callback to create a new instance of TProperty. Returns IContainerDescription<TContainer> The \"this\" pointer for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container containing the property. TProperty The type of the property."
  },
  "api/NanoByte.StructureEditor.WinForms.LocalizableTextBox.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.LocalizableTextBox.html",
    "title": "Class LocalizableTextBox | NanoByte Structure Editor",
    "summary": "Class LocalizableTextBox Namespace NanoByte.StructureEditor.WinForms Assembly NanoByte.StructureEditor.WinForms.dll Exposes a LocalizableStringCollection as a text box with a drop-down box for language switching. public class LocalizableTextBox : NodeEditorBase<LocalizableStringCollection>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, INodeEditor<LocalizableStringCollection>, INodeEditor Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl NodeEditorBase<LocalizableStringCollection> LocalizableTextBox Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl INodeEditor<LocalizableStringCollection> INodeEditor Inherited Members NodeEditorBase<LocalizableStringCollection>.Target NodeEditorBase<LocalizableStringCollection>.TargetChanged NodeEditorBase<LocalizableStringCollection>.CommandExecutor NodeEditorBase<LocalizableStringCollection>.CommandExecutorChanged NodeEditorBase<LocalizableStringCollection>.OnRefresh NodeEditorBase<LocalizableStringCollection>.Bind(Control, PropertyPointer<string>) NodeEditorBase<LocalizableStringCollection>.Bind(ComboBox, PropertyPointer<string>) NodeEditorBase<LocalizableStringCollection>.Bind(UriTextBox, PropertyPointer<Uri>) NodeEditorBase<LocalizableStringCollection>.Bind<TControl, TChild>(TControl, Func<TChild>) NodeEditorBase<LocalizableStringCollection>.Bind(CheckBox, PropertyPointer<bool>) UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ScaleMinMaxSize(float, float, bool) ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LocalizableTextBox() public LocalizableTextBox() Properties HintText A text to be displayed in GrayText when the text box is empty. public string HintText { get; set; } Property Value string Multiline Controls whether the text can span more than one line. public bool Multiline { get; set; } Property Value bool TextBox public HintTextBox TextBox { get; } Property Value HintTextBox Methods Refresh() Forces the control to invalidate its client area and immediately redraw itself and any child controls. public override void Refresh()"
  },
  "api/NanoByte.StructureEditor.WinForms.NodeEditorBase-1.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.NodeEditorBase-1.html",
    "title": "Class NodeEditorBase<T> | NanoByte Structure Editor",
    "summary": "Class NodeEditorBase<T> Namespace NanoByte.StructureEditor.WinForms Assembly NanoByte.StructureEditor.WinForms.dll Common base class for controls that edits a node in the structure. public abstract class NodeEditorBase<T> : UserControl, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, INodeEditor<T>, INodeEditor where T : class Type Parameters T The type of element to edit. Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl NodeEditorBase<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl INodeEditor<T> INodeEditor Derived LocalizableTextBox PropertyGridNodeEditor<T> Inherited Members UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ScaleMinMaxSize(float, float, bool) ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NodeEditorBase() protected NodeEditorBase() Properties CommandExecutor An optional undo system to use for editing. [Browsable(false)] public virtual ICommandExecutor? CommandExecutor { get; set; } Property Value ICommandExecutor Target The element to be edited. [Browsable(false)] public virtual T? Target { get; set; } Property Value T Methods Bind(UriTextBox, PropertyPointer<Uri?>) Binds a UriTextBox to an Uri property through the live editing and Undo system. protected void Bind(UriTextBox control, PropertyPointer<Uri?> pointer) Parameters control UriTextBox The control to hook up (is automatically added to Controls). pointer PropertyPointer<Uri> Read/write access to the value the control represents. Bind(CheckBox, PropertyPointer<bool>) Binds a CheckBox to a bool property through the live editing and Undo system. protected void Bind(CheckBox control, PropertyPointer<bool> pointer) Parameters control CheckBox The control to hook up (is automatically added to Controls). pointer PropertyPointer<bool> Read/write access to the value the control represents. Bind(ComboBox, PropertyPointer<string?>) Binds a ComboBox to a string property through the live editing and Undo system. protected void Bind(ComboBox control, PropertyPointer<string?> pointer) Parameters control ComboBox The control to hook up (is automatically added to Controls). pointer PropertyPointer<string> Read/write access to the value the control represents. Bind(Control, PropertyPointer<string?>) Binds a WinForms control to a property through the live editing and Undo system. protected void Bind(Control control, PropertyPointer<string?> pointer) Parameters control Control The control to hook up (is automatically added to Controls). pointer PropertyPointer<string> Read/write access to the value the control represents. Bind<TControl, TChild>(TControl, Func<TChild>) Binds a INodeEditor<T> as child editor through the live editing and Undo system. protected void Bind<TControl, TChild>(TControl control, Func<TChild> getTarget) where TControl : Control, INodeEditor<TChild> where TChild : class Parameters control TControl The control to hook up (is automatically added to Controls). getTarget Func<TChild> Callback to retrieve the (child) target of the control. Type Parameters TControl The specific INodeEditor<T> type. TChild The type the child editor handles. Refresh() Forces the control to invalidate its client area and immediately redraw itself and any child controls. public override void Refresh() Events CommandExecutorChanged Is raised when CommandExecutor has been changed. protected event Action? CommandExecutorChanged Event Type Action OnRefresh Is raised when Refresh() is called. protected event Action? OnRefresh Event Type Action TargetChanged Is raised when Target has been changed. protected event Action? TargetChanged Event Type Action"
  },
  "api/NanoByte.StructureEditor.WinForms.PropertyGridNodeEditor-1.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.PropertyGridNodeEditor-1.html",
    "title": "Class PropertyGridNodeEditor<T> | NanoByte Structure Editor",
    "summary": "Class PropertyGridNodeEditor<T> Namespace NanoByte.StructureEditor.WinForms Assembly NanoByte.StructureEditor.WinForms.dll Edits a node in the structure using a PropertyGrid. public class PropertyGridNodeEditor<T> : NodeEditorBase<T>, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, INodeEditor<T>, INodeEditor where T : class Type Parameters T The type of element to edit. Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl NodeEditorBase<T> PropertyGridNodeEditor<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl INodeEditor<T> INodeEditor Inherited Members NodeEditorBase<T>.Target NodeEditorBase<T>.TargetChanged NodeEditorBase<T>.CommandExecutor NodeEditorBase<T>.CommandExecutorChanged NodeEditorBase<T>.OnRefresh NodeEditorBase<T>.Refresh() NodeEditorBase<T>.Bind(Control, PropertyPointer<string>) NodeEditorBase<T>.Bind(ComboBox, PropertyPointer<string>) NodeEditorBase<T>.Bind(UriTextBox, PropertyPointer<Uri>) NodeEditorBase<T>.Bind<TControl, TChild>(TControl, Func<TChild>) NodeEditorBase<T>.Bind(CheckBox, PropertyPointer<bool>) UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ScaleMinMaxSize(float, float, bool) ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PropertyGridNodeEditor() public PropertyGridNodeEditor()"
  },
  "api/NanoByte.StructureEditor.WinForms.StructureEditor-1.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.StructureEditor-1.html",
    "title": "Class StructureEditor<T> | NanoByte Structure Editor",
    "summary": "Class StructureEditor<T> Namespace NanoByte.StructureEditor.WinForms Assembly NanoByte.StructureEditor.WinForms.dll An editor for hierarchical structures. public class StructureEditor<T> : UserControl, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl, IStructureEditor<T> where T : class, IEquatable<T> Type Parameters T The type of object to edit. Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl StructureEditor<T> Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl IStructureEditor<T> Inherited Members UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.Dispose(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ScaleMinMaxSize(float, float, bool) ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks Derive and call DescribeRoot(string) or DescribeRoot<TEditor>(string) as well as Describe<TContainer>() in the constructor. Constructors StructureEditor() Creates a new structure editor for a T with a parameterless constructor. public StructureEditor() StructureEditor(Func<T>) Creates a new structure editor. public StructureEditor(Func<T> factory) Parameters factory Func<T> Callback to create a new instance of T. Properties CommandManager Holds the object being editing and manages undo/redo operations on it. public ICommandManager<T> CommandManager { get; } Property Value ICommandManager<T> Methods DescribeRoot(string) Set up handling for the root element with a generic editor. public IContainerDescription<T> DescribeRoot(string name) Parameters name string The name of the root element. Returns IContainerDescription<T> The ContainerDescription<TContainer> for use in a \"Fluent API\" style. DescribeRoot<TEditor>(string) Set up handling for the root element with a custom editor. public IContainerDescription<T> DescribeRoot<TEditor>(string name) where TEditor : INodeEditor<T>, new() Parameters name string The name of the root element. Returns IContainerDescription<T> The ContainerDescription<TContainer> for use in a \"Fluent API\" style. Type Parameters TEditor An editor for modifying the content of the root. Describe<TContainer>() Adds a ContainerDescription<TContainer> used to describe the structure of the data being editing. public IContainerDescription<TContainer> Describe<TContainer>() where TContainer : class Returns IContainerDescription<TContainer> The ContainerDescription<TContainer> for use in a \"Fluent API\" style. Type Parameters TContainer The type of the container to describe. GetSerialized() Returns the serialized representation of the selected NanoByte.StructureEditor.WinForms.StructureTreeNode. protected virtual string GetSerialized() Returns string Open(ICommandManager<T>) Opens an object for editing using the specified ICommandManager<T>. public void Open(ICommandManager<T> commandManager) Parameters commandManager ICommandManager<T> Holds the object being editing and manages undo/redo operations on it. Redo() Redoes the last action. public void Redo() Remove() Removes the currently selected entry. public void Remove() Undo() Undoes the last action. public void Undo()"
  },
  "api/NanoByte.StructureEditor.WinForms.ValidatingTextEditor.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.ValidatingTextEditor.html",
    "title": "Class ValidatingTextEditor | NanoByte Structure Editor",
    "summary": "Class ValidatingTextEditor Namespace NanoByte.StructureEditor.WinForms Assembly NanoByte.StructureEditor.WinForms.dll A text editor that automatically validates changes using an external callback after a short period of no input. public class ValidatingTextEditor : UserControl, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl ValidatingTextEditor Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ScaleMinMaxSize(float, float, bool) ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ValidatingTextEditor() public ValidatingTextEditor() Properties EnableRedo Indicates whether Redo() is currently available. public bool EnableRedo { get; } Property Value bool EnableUndo Indicates whether Undo() is currently available. public bool EnableUndo { get; } Property Value bool TextEditor The text editor control used internally. public TextEditorControl TextEditor { get; } Property Value TextEditorControl Methods ClearUndoStack() Clears the undo stack of the underlying text editor control. public void ClearUndoStack() Dispose(bool) Releases the unmanaged resources used by the Control and its child controls and optionally releases the managed resources. protected override void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. Redo() Executes the redo method of the underlying text editor control. public void Redo() SetContent(string, string) Sets a new text to be edited. public void SetContent(string text, string format) Parameters text string The text to set. format string The format named used to determine the highlighting scheme (e.g. XML). Undo() Executes the undo method of the underlying text editor control. public void Undo() Events ContentChanged Raised when changes have accumulated after a short period of no input. public event Action<string>? ContentChanged Event Type Action<string>"
  },
  "api/NanoByte.StructureEditor.WinForms.html": {
    "href": "api/NanoByte.StructureEditor.WinForms.html",
    "title": "Namespace NanoByte.StructureEditor.WinForms | NanoByte Structure Editor",
    "summary": "Namespace NanoByte.StructureEditor.WinForms WinForms controls for building split-screen editors for data structures. Classes ContainerDescriptionExtensions Provides WinForms-specific extensions methods for IContainerDescription<TContainer>. LocalizableTextBox Exposes a LocalizableStringCollection as a text box with a drop-down box for language switching. NodeEditorBase<T> Common base class for controls that edits a node in the structure. PropertyGridNodeEditor<T> Edits a node in the structure using a PropertyGrid. StructureEditor<T> An editor for hierarchical structures. ValidatingTextEditor A text editor that automatically validates changes using an external callback after a short period of no input."
  },
  "api/NanoByte.StructureEditor.html": {
    "href": "api/NanoByte.StructureEditor.html",
    "title": "Namespace NanoByte.StructureEditor | NanoByte Structure Editor",
    "summary": "Namespace NanoByte.StructureEditor UI-agnostic base logic for building split-screen editors for data structures. Classes ContainerDescriptionExtensions Provides extensions methods for IContainerDescription<TContainer>. ContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). Provides information about how to edit this content. ListElementNodeCandidate<TList, TElement> Describes a potential new node in the structure that points to an element in the list. ListElementNode<TContainer, TList, TElement, TEditor> Describes a node in the structure that points to an element in the list. Node Describes a specific node in the structure. NodeCandidate Describes a potential new node in the structure. PropertyNodeCandidate<TProperty> Describes a potential new node in the structure that points to a property. PropertyNode<TContainer, TProperty, TEditor> Describes a node in the structure that points to a property. Interfaces IContainerDescription<TContainer> Describes an object that contains nodes (properties and/or lists). Provides information about how to edit this content. IListDescription<TContainer, TList> Exposes methods for configuring a list in a ContainerDescription<TContainer> in a Fluent API style. INodeEditor Provides an interface to a control that edits a node in the structure. INodeEditor<T> Provides an interface to a control that edits a node in the structure. IStructureEditor<T> An editor for hierarchical structures. ITargetContainerInject<T> Implement this interface in addition to INodeEditor<T> in order to get the target's container injected."
  },
  "index.html": {
    "href": "index.html",
    "title": "Home | NanoByte Structure Editor",
    "summary": "NanoByte Structure Editor NanoByte Structure Editor is a WinForms library that helps you build split-screen editors for your data structures, consisting of: a collapsible tree-view of the data structure, a graphical editor for the currently selected node in the tree (PropertyGrid or custom) and a text editor (based on ICSharpCode.TextEditor) with a serialized (XML) representation of the currently selected node. This allows you to create an IDE-like experience for your users when editing complex domain specific languages, configuration files, etc.. Usage Add a reference to the NanoByte.StructureEditor.WinForms NuGet package to your project. It is available for .NET Framework 2.0+. Initialization Create an instance of StructureEditor<T> and add it to your Form: var editor = new StructureEditor<MyData>(); Controls.Add(editor); Alternatively, you may want to derive your own class from StructureEditor<T>. This will allow you to use the graphical WinForms designer in Visual Studio (which does not support generic types) to place the Editor on your Form. public class MyDataEditor : StructureEditor<MyData> {} You need to \"describe\" your data structure to the Editor. You can do this directly after instantiating the editor or in the constructor of your derived class. Call DescribeRoot() and then use the fluent API provided as a return value to describe the properties on your main data type. Call Describe () to describe the properties on a data type TContainer exposed by another property. You can use multiple calls with different type parameters to describe arbitrarily deep hierarchies. The fluent API provides the following methods: .AddProperty() describes a simple value property. .AddPlainList() describes a non-polymorphic list. .AddList() describes a polymorphic list. After calling it you need to chain .AddElement() calls for each specific type of element the list can hold. There are numerous overloads for each of these methods, e.g., allowing you to specify a custom editor control for a data type or to keep the auto-generated one. editor.DescribeRoot(\"Address Book\") .AddPlainList(\"Group\", x => x.Groups); editor.Describe<IContactContainer>() .AddPlainList(\"Contact\", x => x.Contacts); editor.Describe<Contact>() .AddProperty(\"Home Address\", x => PropertyPointer.For(() => x.HomeAddress)) .AddProperty(\"Work Address\", x => PropertyPointer.For(() => x.WorkAddress)) .AddList(x => x.PhoneNumbers) .AddElement(\"Landline Number\", new LandlineNumber()) .AddElement(\"Mobile Number\", new MobileNumber()); Storage Use the Open() method to load an XML file into the editor: editor.Open(CommandManager<AddressBook>.Load(path)); Use the Save() method on the CommandManager property to save the editor's content as an XML file: editor.CommandManager.Save(path); Take a look a the sample project for a more complete setup, including undo/redo functionality."
  }
}